<!DOCTYPE html>
<html xmlns:fb="http://ogp.me/ns/fb#">


<head>


<%= render partial: "layouts/artist_head" %>





<link type="text/css" rel="stylesheet" href="/<%= @artist.url_slug %>/css" media="screen">

<!--defaults-->
<%#= javascript_include_tag :'defaults'%>
<!--/defaults-->

<%= javascript_include_tag 'jquery-1.8.3', 'rails.validations', 'jquery.backstretch.min', 'showHide' %>

<%#= javascript_include_tag 'jquery-1.6.3','rails.validations', 'jquery.backstretch.min'%>

<script type="text/javascript" src="/javascripts/jPlayer/jquery.jplayer.min.js"></script>
<script type="text/javascript" src="/javascripts/jPlayer/add-on/jplayer.playlist.min.js"></script>
<script type="text/javascript" src="/javascripts/jPlayer/add-on/jquery.jplayer.inspector.js"></script>
<script type="text/javascript" src="/javascripts/jquery.ui.widget.js"></script>
<script type="text/javascript" src="/javascripts/jquery.fileupload.js"></script>
<script type="text/javascript" src="/javascripts/simple-expand.js"></script>
<script type="text/javascript" src="/javascripts/jquery.iframe-transport.js"></script>
<script type="text/javascript" src="/javascripts/jquery.cloudinary.js"></script>
<%= cloudinary_js_config %>



<link type="text/css" href="/skin/black_and_yellow/jplayer-black-and-yellow.css" rel="stylesheet"/>
<link type="text/css" href="/stylesheets/style.css" rel="stylesheet"/>

<!-- Twitter follow -->
<script type="text/javascript" src="https://platform.twitter.com/widgets.js"></script>

<!-- Master template -->
<script>//<![CDATA[
$(function () {


	$('.show_hide').showHide({
		speed:300, // speed you want the toggle to happen
		easing:'', // the animation effect you want. Remove this line if you dont want an effect and if you haven't included jQuery UI
		changeText:0, // if you dont want the button text to change, set this to 0
		showText:'View', // the button text to show when a div is closed
		hideText:'Close' // the button text to show when a div is open

	});
});


//<!-- Global Varaibles for playing song in playlist with click -->
var myPlaylist;
var playlistSongs = [];
var artistSongs = {};

//<!-- Initializes the play list -->
function initializePlayList(newPlaylist) {
	return new jPlayerPlaylist({
				jPlayer:"#jquery_jplayer_1",
				cssSelectorAncestor:"#jp_container_1"
			},
			newPlaylist,
			{playlistOptions:{
				autoPlay:true
			}},
			{
				swfPath:"../javascripts/jplayer",
				supplied:"mp3",
				wmode:"window"
			});
}

function songCountIncrementer(event) {
	console.log(event);
	var songID = event.jPlayer.status.media.songID || null;

	if(songID == null) return;

	$.ajax("/api/incrementPlayCount/" + songID, {
		success : function(data){
		console.log("SUCCESSFUL COUNT INCREMENT");
		console.log(data);
	}

	});
}

// Sets csrf-token for all ajax request
$(document).ajaxSend(function(e, xhr, options) {
	var token = $("meta[name='csrf-token']").attr("content");
	xhr.setRequestHeader("X-CSRF-Token", token);
});

window.onresize = function(event) {
    $('.player_nav').css({top: window.innerHeight - $('.player_nav').height()});
}


var DEBUGGING = true;
$(document).ready(function () {
	if ($.browser.msie && parseInt($.browser.version) < 10)
		alert("IE9 and older are not supported.");
		

	myPlaylist = initializePlayList(playlistSongs);
	$('.player_nav').css({top: window.innerHeight - $('.player_nav').height()});

	/*song play counts*/
	$("#jquery_jplayer_1").on($.jPlayer.event.ended, songCountIncrementer);

	//<!-- Click Handler to add song to playlist.Songs are stored in Artists, Index's are assocated with songs -->

	$(".music-button").live("click", function (event) {
		event.preventDefault();

		//<!-- Assigns varibles from click-->
		var songName = $(this).attr('data-song-name'),
			artistName = $(this).attr('data-artist-name'),
			songID = $(this).attr('data-song-id'),
			img = $(this).find('img').attr('src');

		if(!img)
			img = $('#albumImage').attr('src');

		//<!-- checks to see if artist already exisits in the playlist -->
		if (artistSongs[artistName] == undefined)
			artistSongs[artistName] = {};
		//<!-- Assigns the song index to varaible songindex, if it does not exist then become undefined and will be added below -->
		var songIndex = artistSongs[artistName][songName];

		//<!-- If undefined then will ad the song to the play list -->
		if (songIndex === undefined) {
			//<!-- Creates play list object and ads it to play list.If you need to add more song attributes, or file types this is where you do it -->
			myPlaylist.add({
				title:songName,
				artist:artistName,
				albumArt: img,
				songID: songID,
				mp3:$(this).attr('href')
			});

			//<!-- sets the song index. By take the length of the playist (with the song added see above) and subtracts 1 because index starts at 0, length starts at 1 -->
			songIndex = artistSongs[artistName][songName] = myPlaylist.playlist.length - 1;
		}
		artistSong = artistName + "&mdash;" + songName
		
		myPlaylist.play(songIndex);
		$("#track_name").html(artistSong);


	});

	//chrome work around  prevents popstate, and then ajax load of content on first page load (there is probably better but this was easy).  Holds of one the popstate listener for a certian amount of time. Then loads it (i think anyway)
	setTimeout(function () {
		ted_log("about to hit window event listersetTimeout")
		window.addEventListener('popstate', popstate(), false);
	}, 3000);


	$(".content-link").live("click", function (event) {
		event.preventDefault();
		url = $(this).attr('href');
		console.log("pathname: " + url);
		ted_log("about to load content in content link")
		loadContent(url);
	});

//	 	Displays track Info
	// $(".trackInfo").live('mouseenter', function () {
	// 	if($.trim($(this).find('.track_name').text()).length)
	// 		$(this).find(".progressBarContainer").show();
	// });
	// $(".trackInfo").live('mouseleave', function () {
	// 	$(this).find(".progressBarContainer").hide();
	// });

//		Displays playlist

	$(".trackInfo").live('mouseenter', function () {
		console.log("hover enter");
		if($('.songList').children().length){
			var playlist = $('.jp-playlist');
			playlist.css({top: (playlist.height() + 3) * -1}).show();
		}
	});

	$(".jp-playlist").live('mouseleave', function () {
		console.log("hover leave");
		$(".jp-playlist").hide();
	});


	// adds playlist
	$(".payment").live("click", function (event) {

			}
	)


	$(".load-playlist").live("click", function (event) {
				event.preventDefault();
				var location = $(this).attr('href')

				console.log("location: " + location)
				get_playlist(location);

			}
	)

	//to rails form submit
	form_upload_rails();


	//direct to s3 upload
   s3_direct_upload();
   nav_selector();
   twitter_follow();




	//http://redhotsly.github.io/simple-expand/
	$('.adminLink').simpleexpand({'defaultTarget': '.edit-controls' });








	// displays edit window when edit screen is loaded from html (on refresh ect)
	<% if @edit == "true" %>
		$(".edit-controls").show();
	    ted_log("in show edit controls")

	<% end %>


});




//	Loads Facebook like button script after ajax call
$(document).ajaxComplete(function () {
	try {
		FB.XFBML.parse();
	} catch (ex) {
	}
});

function get_playlist(href) {
//      To display current song info in the player the below code needs to be added jplayer.playlist.min.js in the "_highlight:" function
//		var trackInfo = (this.playlist[a].artist)+"&mdash;"+(this.playlist[a].title)
//		$("#track_name").html(trackInfo);


	$.ajax({
		url:href,
		success:function (json) {
			ted_log(json);
			myPlaylist.setPlaylist(json["playlist"])
		},
		dataType:"json"
	});
}

function popstate() {
	// BACK/FORWARD BUTTONS WORK AS WELL
	window.onpopstate = function (event) {
		ted_log("POPSTATE!");
		console.log(event);
		$("#loading").show();
		var location = window.location.href + "?redir=true";
		ted_log("location: " + location);
		ted_log("about to load content");
		ted_log(location);
		loadContent(location);
	};

}


function loadContent(href,admin) {
	ted_log(href);

    var clean_url = url_clean(href)

	ted_log("before artist params,  page type = "+$(".pageType").attr('id')+" clean url = "+clean_url)
	ted_log("admin= "+admin)
//	triggers loading of artist layout (maybe others in the future)
	if($(".pageType").attr('id') != clean_url || admin == true){
		ted_log("inside set artist layout param")



//      checks to make sure its not loading a user page b/c user pages don't need a load a new layout much like internal artist pages
		if(clean_url != "users") {


			//adds the layout type paramiter to the url so they the controller will respond with correct layouts
			var hrefArray

			hrefArray  = href.split("?")

			if(hrefArray.length > 1){
				ted_log("layout &")
				href = href+"&layout=artist"
			}
			else {
				ted_log("layout ?")
				href = href+"?layout=artist"
			}
		}
	};

	$.ajax({
		url:href,
		success:function (json) {
			ted_log(json);
			ted_log("about to load json")
			//debugger;
			//loads twitter script so follow button and the like will load when back button is hit.

			$.getScript("https://platform.twitter.com/widgets.js")
			twitter_follow();

			$.each(json, function (key, value) {
				$(key).html(value);
			});
			ted_log("id is= "+json.id);





			//for the s3 ajax upload
			s3_direct_upload();

			/*shows and hides eliments depending on if they are editing or not.  When artist admin is access from inside artist */
			if(json.hasOwnProperty('edit')){
				ted_log("In Hide Floating Content")
				$(".artistLogoArea").hide();
				$(".navArea").hide();
				$('form[data-validate]').validate();
			}

			else if(json.hasOwnProperty('show')){
				$(".artistLogoArea").show();
				$(".navArea").show();
			};


			//shows admin controls if admin show varible is present.  Used when admin is request from json from an object outside of the current artist
			if (json.hasOwnProperty('admin-show')){
				$(".edit-controls").show();
			}

			//catches form to do json/ajax upload
			form_upload_rails();

			//makes sure navigation works on ajax request
			nav_selector();

			ted_log("before history push state url= "+href)
			// HISTORY.PUSHSTATE
			history.pushState('', 'New URL: ' + href, href);
		},

		dataType:"json"
	});
	/* to update the url when page is redirected.
       May need logic at a later point if loading content without changing the url */
	// HISTORY.PUSHSTATE
	history.pushState('', 'New URL: ' + href, href);
}

//removes http:// from url
function url_clean (currentUrl){


	//cleans the current url removes http
	currentUrl = currentUrl.replace("http://localhost:3000","");
	currentUrl = currentUrl.replace("http://www.threerepeater.com","");
	currentUrl = currentUrl.replace("http://threerepeater.com","");
	currentUrl = currentUrl.replace("https://localhost:3000","");
	currentUrl = currentUrl.replace("https://www.threerepeater.com","");
	currentUrl = currentUrl.replace("https://threerepeater.com","");

	currentUrl = currentUrl.split("/")
	ted_log("currentUrl split= "+currentUrl);
	currentUrl = currentUrl[1]

	return currentUrl
}

function s3_direct_upload(){
	$('.direct-upload').each(function() {

		var form = $(this),
			s3ObjectType,
			s3Id,
			image_save_location,
			imageType,
			s3_file_name,
			meta_url;

		$(this).fileupload({

			url: form.attr('action'),
			type: 'POST',
			autoUpload: true,
			dataType: 'xml', // This is really important as s3 gives us back the url of the file in a XML document
			add: function (event, data) {

				//Image upload only - sets image type (logo, bk ground, song, album art ect)
				imageType = $(event.target).find('.s3_upload').attr('id');
				// sets object type for upload (image and song ect)
				s3ObjectType = $(event.target).find('.s3_upload').data("object_type");
				//Image only - url for saving the image on s3
				image_save_location = $(event.target).find('.s3_upload').data("object_image_save_url");
				//object name for s3
				s3Id = $(event.target).find('.s3_upload').data("object_id");
				//Defines the url for updating meta data in s3
				meta_url = $(event.target).find('.s3_upload').data("meta_url");


				ted_log("s3ObjectType= "+s3ObjectType);
				ted_log("s3id= "+ s3Id);
				ted_log("image type="+ imageType);
				ted_log("meta_url= "+ meta_url);


				// sets the s3 file name for image b/c need file name and ext
				if(s3ObjectType == "image")
					var s3Name = s3Id+data.files[0].name;
				else
					var s3Name = s3Id;
				ted_log("s3id= "+s3Id);

					$.ajax({
						url: "/signed_urls"+"?object="+s3ObjectType,
						type: 'GET',
						dataType: 'json',
	//								data: {doc: {title: data.files[0].name}}, // send the file name to the server so it can generate the key param

						data: {doc: {title: s3Name}}, // send the file name to the server so it can generate the key param

						async: false,
						success: function(ajaxData) {
							//for saving image and updating meta data
							s3_file_name = (data.files[0].name);

							// Now that we have our data, we update the form so it contains all
							// the needed data to sign the request

							form.find('input[name=key]').val(ajaxData.key)
							form.find('input[name=policy]').val(ajaxData.policy)
							form.find('input[name=signature]').val(ajaxData.signature)
							//updates S3 Meta Information
							form.find('input[name=x-amz-meta-my-file-name]').val(data.files[0].name)

							// for attachemts
							if(s3ObjectType !="image"){
								ted_log("in update meta for songs and other")
								form.find('input[name=Content-Disposition]').val("attachment;filename="+data.files[0].name)
								//updates name in form feild
								ted_log("s3_file_name inside not image if statement= "+s3_file_name)
								var file_name_ext_remv = s3_file_name.substring(0, s3_file_name.indexOf('.'));

								save_s3_meta_name(file_name_ext_remv, meta_url)
								$('input[name="song[song_name]"]').val(file_name_ext_remv)
							};

							ted_log ('data from server')
							ted_log (s3Id)
							ted_log (ajaxData.key)
							ted_log (ajaxData.policy)
							ted_log (ajaxData.signature)
							ted_log (ajaxData)
						}
					})

					
				   var file_status = file_size_check(s3ObjectType,data.files[0].size);
				   // $('.progress').text(Math.ceil(data.progress().loaded/data.files[0].size * 100) + "%");
				   ted_log("File status= "+file_status);

				   if(file_status == true){
					   ted_log("data= "+ data)
						data.submit();
				   };
				},

	        send: function(e, data) {
	          $(this).find('.progressContainer').fadeIn();
	          $(this).find('.percent').text('0%');
	        },
	        progress: function(e, data){
	          // This is what makes everything really cool, thanks to that callback
	          // you can now update the progress bar based on the upload progress
	          var percent = Math.round((e.loaded / e.total) * 100)
	          $(this).find('.bar').css('width', percent + '%')
	          $(this).find('.percent').text(percent + '%');
	        },
			fail: function(e, data) {
				console.log('fail')
			},
			success: function(data) {
				// Here we get the file url on s3 in an xml doc
				var url = $(data).find('Location').text()
				ted_log(url)
				ted_log(data)

			    if (s3ObjectType == "image"){
					ted_log("in save image file")
					ted_log("image save location= "+image_save_location)
					$.ajax({
						url:image_save_location,
						type: "post",
						data: {
							type: imageType,
							file_name: s3_file_name
						},
						success:
								function(){console.log("image updated")},

						fail:
								function(){ted_log("image save failed")}

					})
				};
//						$( &#039;#real_file_url&#039; ).val(url) // Update the real input in the other form
			},
			done: function (event, data) {
		        $(this).find('.progressContainer').fadeOut(300, function() {
		          $(this).find('.bar').css('width', 0)
		        });
	          	$(this).find('.s3_upload').fadeOut();
			}
		})
	})
}

function save_s3_meta_name (file_name_ext_remv,meta_update_url) {
	ted_log("in save s3 meta name, meta update url= "+ meta_update_url);
	$.ajax({
		url:meta_update_url,
		type: "post",
		data: {
			s3_meta_name: file_name_ext_remv
		},
		success:
				function(){console.log("saved")},

		fail:
				function(){ted_log("S3_meta_failed")}

	})
};

// client side validation of file size
function file_size_check(type,size){

	if(type == "image"){
		if (size > 1048576){
			alert("Image File exceeds 1 MB, please reduce the size and re upload")
			ted_log("File size is too large.  File is= "+size)

			return false
		} else {
			return true
		}
	} else {

		if (size > 104857600){
			alert("Song file exceeds 100MB, please reduce the size and re upload")
			ted_log("File size is too large.  File is= "+size)

			return false
		} else {
			return true
		}

	};


}

function showNotification(){
	$('.adminLink').attr('data-icon', '*');
}

function form_upload_rails(){
	ted_log("In form upload")

		$('.ajax_update').submit(function(){

					var valuesToSubmit = $(this).serialize();
                    ted_log("in form upload just before ajax post url is= "+$(this).attr('action'))

					$.ajax({
						url: $(this).attr('action'), //sumbits it to the given url of the form
						data: valuesToSubmit,
						type: 'POST',
						dataType: "JSON" // you want a difference between normal and ajax-calls, and json is standard
					}).success(function(json){
								 loadContent(json.url,json.admin)
								 showNotification();
								//uploads the file.  Checks to see if album needs to be zipped.
								 album_upload_s3(json)

							});
					return false; // prevents normal behaviour

				}
		)


    //checks to see if the album needs to be uploaded to s3.  If needs to be uploaded calls call_album_zip controller which returns true/false one album has been uploaded
	function album_upload_s3(json_val){
		ted_log(json_val.zip)
		//if the album doesn't need to be uploaded to s3
		if(json_val.zip == false || !json_val.zip){
			ted_log("in album upload false. Doesn't need to be uploaded");
			}
		// if the album needs to be uploaded to s3
		else {
			ted_log("in album upload false. Needs to be uploaded");
			$.ajax({
				url: json_val.zip_url, //sumbits it to the given url of the form
				type: 'POST',
				dataType: "JSON" // you want a difference between normal and ajax-calls, and json is standard
			}).success(function(json){
						ted_log("album_uploaded")

			});
		}
	}

}



//function fb_like_detect(){
//	FB.Event.subscribe('edge.create',
//			function(response) {
//				ted_log("facebook like is working")
//				alert('You liked the URL: ' + response);
//			}
//	);
//
//}
function nav_selector(){
	$(".navLink").click(function (event) {
		ted_log("in nav slector click function");

		var nav_id = "#"+event.target.id
		ted_log("nav id "+nav_id);
		$( ".navArea div" ).parent().find('div').removeClass("selected");
		$(nav_id).addClass("selected")
	});

}





//was for changing meta information on content load
//	function change_meta() {
//		$("meta[name='twitter:card']").attr("content", "<@artist.name")
//
//
//	}

//dectects twitter follows then allows for an action.
function twitter_follow(){
	twttr.ready(function (twttr) {
		twttr.events.bind('follow',redirect_after_twitter);
	});

}


function redirect_after_twitter (intentEvent) {
	if (!intentEvent) return;
	$('.soc_download_link').show();
}

//what happens after socail action has been taken.
function after_soc_action(redirect_path){
	window.location.href = redirect_path;
}

function ted_log() {
	if (typeof console !== undefined && DEBUGGING) {
		console.log(arguments);
	} else if (DEBUGGING) {
		//alert(json);

	}
}

</script>







<%= csrf_meta_tag %>
</head>

<body>

<div id="fb-root"></div>
<script>(function (d, s, id) {
	var js, fjs = d.getElementsByTagName(s)[0];
	if (d.getElementById(id)) return;
	js = d.createElement(s);
	js.id = id;
	js.src = "//connect.facebook.net/en_US/all.js#xfbml=1";
	fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));

// dectects facebook like. Window waits for facebook script to load
 window.fbAsyncInit = function() {

	FB.Event.subscribe('edge.create', function(response) {
		after_soc_action("/orders/paypal/to_free_download/album/pearljam/256")
		ted_log("facebook worked")
	});
};


</script>

<div class="container">
	<div class="player_nav">


		<div id="jquery_jplayer_1" class="jp-jplayer"></div>


		<div id="jp_container_1">
			<div class="jp-progress-container">
				<div class="jp-seek-bar">
					<div class="jp-play-bar"></div>
				</div>
			</div>	
			<div class="jp-type-playlist">
				<div class="jp-audio-container">
					<div class="branding">
						<div class="logo-transparent-white-small"></div>
					</div>

					<div class="jp-audio">
						<div class="jp-type-single">
							<div id="jp_interface_1" class="jp-interface">

								<div class="trackInfo" style="padding-right:20px;">
									<div class="track_name" id="track_name">&nbsp;</div>
								</div>
								<!-- <div id="progress"> -->
									<div class="jp-current-time" ></div>
									<div class="divider" style="padding:0px 5px;">/</div>
									<div class="jp-duration endTime"></div>
								<!-- </div> -->
								<div class="playlist">
									<div class="jp-playlist">
										<ul class="songList">
											<li class="playlistSong"></li>
										</ul>
									</div>
								</div>

							</div>
						</div>
					</div>
						<ul class="jp-controls" style="display:inline; list-style-type:none;">

							<li><a href="#" class="jp-play" tabindex="1" data-icon="&#x27;"></a></li>
							<li><a href="#" class="jp-pause" tabindex="1" data-icon="&#x22;"></a></li>

							<li><a href="#" class="jp-mute" tabindex="1" data-icon="&#x24;"></a></li>
							<li><a href="#" class="jp-unmute" tabindex="1" data-icon="&#x25;"></a></li>
						</ul>
				</div>

				<div class="jp-no-solution">
					<span>Update Required</span>
					To play the media you will need to either update your browser to a recent version or update your
					<a href="http://get.adobe.com/flashplayer/" target="_blank">Flash plugin</a>.
				</div>
				<!--<div class="clearfix"></div>-->
			</div>
		</div>

		<div id="user_nav" class="user_nav">
			<div class="user_nav_info">
				<% if user_signed_in? %>
					Signed in as <%= link_to current_user.email, show_user_path(current_user.id), :class => "nav content-link" %>
					<%= link_to "Sign out", destroy_user_session_path, :class => :nav, :method => :delete %>

				<% else %>
					<%#= render :partial => 'login_form' %>
					<%= link_to "register", new_user_registration_path %>
					<%= link_to "sign in", new_user_session_path %>
				<% end %>
			</div>
			<div class="admin">
				<a href=# class="adminLink" data-icon="&#x23;"></a>
			</div>
		</div>


	</div>


</div>

<!--<div id="loading">-->
<!--<p>Loading..</p>-->
<!--</div>-->


<div class="edit-controls">
	<% if can? :update, @artist %>
		<h1>Menu</h1>


		<h1><%= link_to @artist.name, artist_link_path(@artist.url_slug), :class => "content-link" %></h1>


		<%= link_to "Delete Artist", pre_delete_path(@artist.url_slug)%>

		<h2><%= link_to 'Admin', artist_admin_path(@artist.url_slug), :class => "content-link" %></h2>

		<h2><%= link_to 'Layout Editor', profile_edit_path(@artist.url_slug) %></h2>

		<h2>Albums: <%= link_to 'New Album',add_album_path(@artist.url_slug),:class => "content-link"%></h2>

		<ul>
			<% @artist.albums.uniq.each do |albums| %>
				<% unless albums.album_url_slug.blank?%>
					<li><%= link_to albums.al_name, artist_show_album_path(@artist.url_slug,albums.album_url_slug),:class => "content-link" %>
						<%= link_to 'Edit', album_edit_path(@artist.url_slug, albums.album_url_slug,albums.id),:class => "content-link" %>
						<%= link_to 'Destroy', album_pre_delete_path(@artist.url_slug,albums.album_url_slug), :confirm => 'Are you sure?' %>
						<%= link_to 'Album Codes', album_create_code_path(@artist.url_slug,albums.id),:class => "content-link" %>
					</li>
				<% end %>
			<% end %>
		</ul>

		<p>
		<h2>Songs: <%= link_to 'Add Song', add_song_path(@artist.url_slug),:class => "content-link"%></h2>

		<ul>
			<% @artist.songs.uniq.each do |songs| %>
				<% unless songs.song_url_slug.blank?%>
					<% unless songs.s3_id.nil? %>
						<li><%= link_to songs.song_name, artist_show_song_path(@artist.url_slug, songs.song_url_slug), :class => "content-link" %>
							<%= link_to 'Edit', song_edit_path(@artist.url_slug,songs.song_url_slug, songs.id),:class => "content-link" %>
							<%= link_to 'Destroy', song_destroy_path(@artist.url_slug,songs.id), :confirm => 'Are you sure?' %>
						</li>
					<% end %>
				<% end %>
			<% end %>
		</ul>

		</p>


	<% end %>

	<%= link_to 'Song List', songs_path %>
	<%= link_to 'Artist List', artists_path%>


</div>

<% if flash[:notice] %>
	<div class="notice"><%= flash[:notice] %></div>
<% end %>

<div class="bodyArea">

	  <!--Two if conditions because rails is lame. One for edit, one for show.  No idea why one doest work for both situations, but they dont. Also object type is not nil because if you define object_type="true" it fails when artist pages load becuase they don't have an artist type defined.   Change if you want to waste an hour of your life-->
	<% if  !@object_type.nil? %>

		<%= render template: "layouts/user" %>

	<% else %>

	<%= render template: "layouts/artist_floating_content" %>

    <% end %>
</div>




</body>
</html>
